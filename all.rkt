#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 420 0 17 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 23 29 1 #"\n"
0 0 17 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 23 29 1 #"\n"
0 0 25 3 7 #"#reader"
0 0 23 3 1 #"("
0 0 14 3 3 #"lib"
0 0 23 3 1 #" "
0 0 19 3 25 #"\"htdp-beginner-reader.ss\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 23 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 23 3 1 #" "
0 0 14 3 3 #"all"
0 0 23 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 23 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 23 3 3 #" #("
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 23 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 14 3 4 #"none"
0 0 23 3 1 #" "
0 0 20 3 2 #"#f"
0 0 23 3 6 #" ())))"
0 0 23 29 1 #"\n"
0 0 17 3 64
#";;--------------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; f->c:Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; GIVEN: a temperature in degrees Fahrenheit as an argument"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; RETURNS: the equivalent temperature in degrees Celcius."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; (f->c 32)  => 0"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";; (f->c 100) => 37.77777777777778"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;(define (f->c f)"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;( *(- f 32)(/ 5 9)))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;(f->c 100)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";;   (check-expect (f->c 32) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";;   (check-expect (f->c 100) 37.7)"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";;----------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; tip : NonNegNumber Number[0.0,1.0] -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";; GIVEN: the amount of the bill in dollars and the"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; percentage of tip"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";; RETURNS: the amount of the tip in dollars."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";;(tip 10 0.15)  => 1.5"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; (tip 20 0.17)  => 3.4"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";; (define ( tip x y)"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;  (* y x) )"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; (tip 10 0.15)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; (check-expect (tip 10 0.15) 1.5)"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";;  (check-expect (tip 20 0.17) 3.4)"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";;-----------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; sq : Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; GIVEN: A number"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; RETURNS: The square of that number."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;(sq 10)  => 100"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";;(sq -4)  => 16"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";;(define (sq x)"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;  (* x x))"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;(sq -3.9);"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 29 #";; (check-expect (sq 10) 100)"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; (check-expect (sq -4) 16)"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";;------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; quadratic-root : Number Number Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; GIVEN: 3 numbers."
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; RETURNS: The number as a quadratic-root."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";;(quadratic-root 4 2 3)  => #i0.25-0.82915619758885i"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";;(quadratic-root 1 2 3)  => #i1.0-1.4142135623730951i"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";;(define (quadratic-root a b c)"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;(/(- b(sqrt(-(* b b)(* 4 a c))))(* 2 a)))"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;(quadratic-root 1 2 3)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;  (check-expect (quadratic-root 1 2 3) 1.0-1.4142135623730951i)"
0 0 23 29 1 #"\n"
0 0 17 3 65
#";;  (check-expect (quadratic-root 4 2 3) 1.0-1.4142135623730951i)"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";;--------------------------------------------------- "
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; circumference : Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: the radius r of a circle "
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; RETURNS: its circumference, using the formula 2 * pi * r."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; (circumference 1)  =>  6.283185307179586 "
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; (circumference 0)  =>  0"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";;(define ( circumference x)"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";;  (* 2 pi x))"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";;( circumference 1);"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";;  (check-expect (circumference 1) #i6.283185307179586) "
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;  (check-expect (circumference 0)  0)"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";;--------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";(string-append \"hello\" \"world\")"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";(string-append \"hello \" \"world\")"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";(string-append \"hell\" \"o world\")"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";( define (large a b c)"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";(cond"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";  [(= a (max a b c)) (+ a (max b c))]"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";  [(= b (max  a b c)) (+ b (max a c))] "
0 0 23 29 1 #"\n"
0 0 17 3 39 #";  [(= c (max  a b c)) (+ c (max a b))]"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 17 3 4 #"; ))"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";(large1 10 1 20)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";;-------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; sum-of-2-largest-numbers: Number Number Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; GIVEN: The 3 numbers."
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; RETURNS: The sum of largest 2 numbers."
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; (sum-of-2-largest-numbers 10 15 20)  =>  30"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; (sum-of-2-largest-numbers 30 30 30)  =>  60"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;( define (sum-of-2-largest-numbers a b c)"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";;  (cond"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;    [( and (<= a  b)  (<= a c) ) (+ b c)]"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";;    [( and (<= b c) (<= b a)) (+ a c)]"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;    [( and (<= c a)  (<= c b)) (+ a b)]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;(sum-of-2-largest-numbers 30 30 30)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";;  (check-expect (sum-of-2-largest-numbers 30 30 30) 60 ) "
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 17 3 59
#";;  (check-expect (sum-of-2-largest-numbers 30 30 40) 70 ) "
0 0 23 29 1 #"\n"
0 0 17 3 59
#";;   (check-expect (sum-of-2-largest-numbers 3 30 40) 70 ) "
0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";;----------------------------------------------------------------  "
 #" "
) 0 0 23 29 1 #"\n"
0 0 17 3 17 #";(large1 8 20 10)"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 17 3 6 #";(cond"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 9 #"; (+ 4 5)"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";(cond"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 45 #"; [(positive? 5) (error \"doesn't get here\")])"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 17 3 49 #"; [(zero? -5) (error \"doesn't get here, either\")]"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"   "
0 0 17 3 18 #";[(positive? 5) 'h"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";( remainder 9 2)"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";(remainder -2 9)"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";(modulo 2 9)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";(modulo 9 2)"
0 0 23 29 1 #"\n"
0 0 17 3 48 #";wierd behaviour of modulo with negative numbers"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";(modulo -2 9)"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";predicate is a function dat returns true or false"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";(remainder 8 2)"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";;-----------------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;even: Number-> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";;GIVEN: Number"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;RETURNS: True or False"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;even(20)=> true"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"( "
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"even"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"  ( "
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"    [( "
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [ "
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"      ))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 5 #"even?"
0 0 23 3 1 #" "
0 0 20 3 2 #"90"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";;(check-expect (even 30) true ) "
0 0 23 29 1 #"\n"
0 0 17 3 33 #";;(check-expect (even 3) false ) "
0 0 23 29 1 #"\n"
0 0 17 3 61
#";;-----------------------------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;circ-area: Number->Number"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";;GIVEN: The radius of circle."
0 0 23 29 1 #"\n"
0 0 17 3 33 #";;RETURNS:The area of the circle."
0 0 23 29 1 #"\n"
0 0 17 3 11 #";;Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";;circ-area("
0 0 23 29 1 #"\n"
0 0 17 3 22 #";;(define(circ-area r)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 17 3 14 #";; (* pi r r))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";;(circ-area 10)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Test:"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";; (check-expect (circ-area 10) true ) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";;----------------------------------"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";;-----------------------------------------"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";(make-posn 5 3)"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";(posn?  true)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";(posn? (make-posn 2 1))"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";;(define-struct robot-north (status))"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";;( make-robot-north true)"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";;(robot-north-status( make-robot-north true))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";;(define-struct robot-south (status))"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";;( make-robot-south true)at a time u can face onli north or south o"
 #"r east or west"
) 0 0 23 29 1 #"\n"
0 0 17 3 47 #";;(robot-south-status( make-robot-south false))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;(define-struct robot-east (status))"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";;( make-robot-south true)at a time u can face onli north or south o"
 #"r east or west"
) 0 0 23 29 1 #"\n"
0 0 17 3 45 #";;(robot-east-status( make-robot-east false))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;(define-struct robot-west (status))"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";;( make-robot-south true)at a time u can face onli north or south o"
 #"r east or west"
) 0 0 23 29 1 #"\n"
0 0 17 3 45 #";;(robot-west-status( make-robot-west false))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";;(define-struct initial-robot(x y))"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 44 #"initial-robot-x(make-initial-robot 100 100))"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 46 #"initial-robot-y(make-initial-robot 100 100) ) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(posn-y (make-posn 8 5))"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";(posn-y (make-posn 42 15))"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";(posn-x (make-posn true false))"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";(make-posn true false) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";(+ (string-length \"hello-world\") 20)"
0           0
